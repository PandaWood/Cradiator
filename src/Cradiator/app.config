<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
		<section name="usernames" type="System.Configuration.NameValueSectionHandler"/>
	</configSections>
	<appSettings>
		<add key="URL" value="debughttp://ccnetlive.thoughtworks.com/ccnet"/>
		<add key="Skin" value="StackPhoto"/>
		<add key="PollFrequency" value="30"/>
		<add key="ProjectNameRegEx" value=".*"/>
		<add key="CategoryRegEx" value=".*"/>
		<add key="ShowCountdown" value="true"/>
		<add key="ShowProgress" value="true"/>
		<add key="PlaySounds" value="true"/>
		<add key="BrokenBuildSound" value="explosion.wav"/>
		<add key="FixedBuildSound" value="AppeggioOfSuccess.wav"/>
		<add key="PlaySpeech" value="true"/>
		<add key="BrokenBuildText" value="$ProjectName$ is broken. $Breaker$"/>
		<add key="FixedBuildText" value="$ProjectName$ is fixed"/>
		<add key="SpeechVoiceName" value=""/>
		<add key="BreakerGuiltStrategy" value="Last"/>
	</appSettings>
	<usernames>
		<add key="jsmith" value="John Smith"/>
	</usernames>
	<log4net>
		<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="cradiator.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<datePattern value="yyyy-MM-dd"/>
			<maxSizeRollBackups value="1"/>
			<maximumFileSize value="1MB"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date %-5level %logger - %message%newline"/>
			</layout>
		</appender>
		<root>
			<level value="INFO"/>
			<appender-ref ref="RollingLogFileAppender"/>
		</root>
	</log4net>
	<startup/>
</configuration>
<!--
  
* Polling Frequency - In seconds. Default is 30   
  
* URL - The base XML status report URL
  - eg for CCNet - http://ccnetlive.thoughtworks.com/ccnet/XmlStatusReport.aspx
  - eg for Java  - http://www.spice-3d.org/cruise/xml
  - eg for Ruby (.rb) http://cruisecontrolrb.thoughtworks.com/XmlStatusReport.aspx
		(If URL ends with 'ccnet' "XmlStatusReport.aspx" will be auto-appended)
  ** DEBUG MODE - prepend the URL with the word 'debug' - this switches to using an xml file in the bin folder 
	 named 'DummyProjectStatus.xml' instead of connecting to the WebService - useful for testing /screenshots etc
  - MultiURL - The URL can be split (using space as a delimiter), to refer to multiple urls. 
    All projects info is concatenated into one screen output.
    eg value="http://url1 http://url2" 
    (DEBUG MODE overrides the multiurl feature, such that no multiurls are read ie either debug or not)
  
* ProjectNameRegEx - RegEx used to filter which projects are included (by name)
	- Defaults to ".*" (even if config = "")
	
* CategoryRegEx - as for ProjectNameRegEx but filters by category name
  
* Skin - Currently 3 choices 
  (1) Grid - arranged in a grid format
  (2) Stack - arranged in a stack (ie top-to-bottom listbox type) format
  (3) StackPhoto - same as Stack but shows an image of the build breaker as well as text 
	    The last/first breaker is listed - which is the last/first person to commit while build is broken - where 
		'last/first' is dependent on the setting 'BreakerGuiltStrategy' (below)
		
	 ** The photo/image functionality, requires a sub-folder named 'images' (relative to folder in which
	    the Cradiator.exe resides) with a JPEG ([username].jpg) corresponding to each username. 
		(This folder is auto-created by the installer)
	    The JPEG file must be named using the username - eg bsimpson requires a filepath 'images/bsimpson.jpg'
		If a username contains an invalid filename character (eg *<>\) it will search
		for the filename without those invalid characters (eg username 'j\bloggs' will search for filename 'jbloggs.jpg'
	    If a JPEG file does not exist for a given user, everything will still work as normal (ie it's not considered an error)
  
* ShowCountdown - 'true' or 'false' (case insensitive) ,so { True False TRUE FALSE } are all valid
	Shows a clock that counts down the 'time to go' before refreshing the screen (updated approx every second)
  
* PlaySounds - true/false, whether to play sounds on events (described below) (.WAV files only)
* PlaySpeech - true/false, whether to speak (ie use SpeechSynthesizer) on certain build events - is configurable (see below)  

* BrokenBuildSound - the filename (without path) of the .WAV file
	The file is assumed to be in a sub-folder named 'sounds' (relative to the folder in which Cradiator.exe resides) 
	A 'BrokenBuildSound' plays in response to a project that starts 1) not Broken (FAILURE|EXCEPTION) followed by 2) Broken  
  
* FixedBuildSound - as for BrokenBuildSound, but plays in the case of 1) Broken (FAILURE|EXCEPTION) followed by 2) SUCCESS

* BrokenBuildText - text can be 'plain text' or include 'variables' which are replaced at runtime
	Plain Text- Voice automatically speaks the project name, followed by configured text 
			    eg voice speaks "Project1 [your text goes here]." 
			    Default value is "is broken"
	Custom - Can include 2 variables in your text (1) $ProjectName$ (2) $Breaker$ (only for broken builds)) 
			 to specify variables that are known only at run time, for that particular project 
			 eg "$ProjectName$ is broken, $Breaker$, you're fired!"
			  
* FixedBuildText - as for BrokenBuildText - default value is "is fixed"

* usernames - a section for mapping usernames to real or full-length names for use by the SpeechSynthesizer 
			 (really only used for determining the $Breaker$ variable in Fixed/BrokenBuildText)
			  eg if your username is 'jbloggs' - this isn't going to sound comprehensible when spoken by the voice synthesizer,
			  hence you can map this username to 'Johann Bloggs'
			  A username of 'jsmith' is mapped to 'John Smith' by default, in app.config, to make the required format obvious
					
* BreakerGuiltStrategy - 'First' or 'Last'. How to determine the 'Breaker', is the 'First' build breaker always guilty?, 
						 or do subsequent committers ('Last' breaker) assume guilt when they commit over a breaking build?
					
  -->
